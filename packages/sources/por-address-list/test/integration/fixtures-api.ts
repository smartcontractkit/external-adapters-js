import nock from 'nock'

export const mockZeusResponseSuccess = (): nock.Scope =>
  nock('https://indexer.zeuslayer.io', {
    encodedQueryParams: true,
  })
    .get('/api/v2/chainlink/proof-of-reserves')
    .reply(
      200,
      () => ({
        accountName: 'zBTC',
        count: 4,
        lastUpdatedAt: '2025-04-14T09:49:28.08802Z',
        result: [
          {
            address: 'bc1p795t8whcfpl6uyxj38enzt43cg8scphrgvn2e79y3xgflv6s6nrsrmudk6',
            addressType: 'taproot',
            balance: '13.74225149',
            id: 4,
            symbol: 'BTC',
            walletName: 'anagram',
          },
          {
            address: 'bc1pd46txhc0a3t8juc2r4njyuk4rv3099dcn039ny0hzgt24tgx3qlszg5e6f',
            addressType: 'taproot',
            balance: '15.44962550',
            id: 3,
            symbol: 'BTC',
            walletName: 'animoca-ventures',
          },
          {
            address: 'bc1p96utmwdngv3xwdn90d7wg4tyqke70fs6js8ajgqkk89zn08z8d5q8xzchd',
            addressType: 'taproot',
            balance: '14.47874067',
            id: 2,
            symbol: 'BTC',
            walletName: 'mechanism-capital',
          },
          {
            address: 'bc1p698gf9gm8j34gvars97j6spsgrlxlhvyfajt2tsz2vnw9fcat9cqjcjn4v',
            addressType: 'taproot',
            balance: '39.62438252',
            id: 1,
            symbol: 'BTC',
            walletName: 'zeus-foundation',
          },
        ],
        totalReserveinBtc: '83.29500018',
        totalToken: '83.29131987',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()
type JsonRpcPayload = {
  id: number
  method: string
  params: Array<{ to: string; data: string }>
}

export const mockCoinbaseResponseSuccess = (): nock.Scope =>
  nock('http://coinbase', {
    encodedQueryParams: true,
  })
    .get('/')
    .reply(
      200,
      () => ({
        schema: 'v1',
        lastUpdatedAt: '2025-02-21T17:59:48Z',
        reservesTotal: {
          amount: '26765.13145192',
          currency: {
            name: 'BTC',
          },
          network: {
            name: 'bitcoin',
          },
        },
        reserveAddresses: [
          {
            address: 'bc1qkqu7akp4lf3vmkde5l4ydp596wp8fm93m9yptd',
            balance: {
              amount: '690.00001207',
              currency: {
                name: 'BTC',
              },
              network: {
                name: 'bitcoin',
              },
            },
          },
          {
            address: '1xT8bWnZzS339nQLnrdqBW6yz8Nt5KjLC',
            balance: {
              amount: '480.98450058',
              currency: {
                name: 'BTC',
              },
              network: {
                name: 'bitcoin',
              },
            },
          },
          {
            address: '1FprAosJemf7TDvLGaTHbUWms3Z1uLUwJS',
            balance: {
              amount: '480.98433527',
              currency: {
                name: 'BTC',
              },
              network: {
                name: 'bitcoin',
              },
            },
          },
          {
            address: '1CgpdCJAkEQrzgqRh4C2EkyKsGCZxDFPEa',
            balance: {
              amount: '480.98433527',
              currency: {
                name: 'BTC',
              },
              network: {
                name: 'bitcoin',
              },
            },
          },
        ],
        wrappedAssetsByNetwork: [
          {
            amount: '16410.75085686',
            currency: {
              name: 'CBBTC',
              address: '0xcbb7c0000ab88b473b1f5afd9ef808440eed33bf',
            },
            network: {
              name: 'ethereum',
              chainId: '1',
            },
          },
          {
            amount: '7614.45412467',
            currency: {
              name: 'CBBTC',
              address: '0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf',
            },
            network: {
              name: 'base',
              chainId: '8453',
            },
          },
        ],
        wrappedAssetsTotal: {
          amount: '26754.167082',
          currency: {
            name: 'CBBTC',
          },
        },
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()

export const mockBedRockResponseSuccess = (): nock.Scope =>
  nock('http://bedrock', {
    encodedQueryParams: true,
  })
    .get('/')
    .reply(
      200,
      () => ({
        btc: [
          { type: 'addr', bridge_source: 'btc', addr: 'btc_1' },
          { type: 'addr', bridge_source: 'btc', addr: 'btc_2' },
        ],
        evm: {
          eth: {
            chain_id: 1,
            vault: 'vault_1',
            tokens: [
              ['BTC', 'token_1', '18', '10'],
              ['BTC', '0x0000000000000000000000000000000000000000', '18', '10'],
            ],
          },
          bsc: {
            chain_id: 56,
            vault: 'vault_2',
            tokens: [['BTC', 'token_2', '18', '10']],
          },
        },
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()

export const mockSolvResponseSuccess = (): nock.Scope =>
  nock('http://solv', {
    encodedQueryParams: true,
  })
    .get('/')
    .reply(
      200,
      () => ({
        accountName: 'SolvBTC',
        result: [
          {
            id: 0,
            address: 'btc_s_1',
            symbol: 'BTC',
            addressType: 'type_1',
            walletName: 'name_1',
          },
          {
            id: 1,
            address: 'btc_s_2',
            symbol: 'BTC',
            addressType: 'type_2',
            walletName: 'name_2',
          },
        ],
        count: 2,
        lastUpdatedAt: '2021-01-01T11:11:11.112Z',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()

export const mockSolvTypeResponseSuccess = (solvType: string): nock.Scope => {
  const solvTypeLower = solvType.toLowerCase()
  return nock(`http://solv-${solvTypeLower}`, {
    encodedQueryParams: true,
  })
    .get('/')
    .reply(
      200,
      () => ({
        accountName: solvTypeLower,
        result: [
          {
            id: 0,
            address: `${solvTypeLower}_s_1`,
            symbol: 'BTC',
            addressType: 'type_1',
            walletName: 'name_1',
          },
          {
            id: 1,
            address: `${solvTypeLower}_s_2`,
            symbol: 'BTC',
            addressType: 'type_2',
            walletName: 'name_2',
          },
        ],
        count: 2,
        lastUpdatedAt: '2021-01-01T11:11:11.112Z',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()
}

export const mockSolvJupResponseSuccess = (): nock.Scope =>
  nock(`http://solv-jup`, {
    encodedQueryParams: true,
  })
    .get('/')
    .reply(
      200,
      () => ({
        accountName: 'SolvBTC.JUP',
        result: [
          {
            id: 0,
            mirrorXLinkId: `jup_s_1`,
            label: 'label_1',
          },
          {
            id: 1,
            mirrorXLinkId: `jup_s_2`,
            label: 'label_2',
          },
        ],
        count: 2,
        lastUpdatedAt: '2021-01-01T11:11:11.112Z',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()

export const mockBaseContractCallResponseSuccess = (): nock.Scope =>
  nock('http://localhost-base:8080')
    .persist()
    .post('/')
    .reply(200, (_uri, request: JsonRpcPayload) => {
      if (request.method === 'eth_chainId') {
        return {
          jsonrpc: '2.0',
          id: request.id,
          result: '0x38',
        }
      } else if (
        request.method === 'eth_call' &&
        request.params[0].to === '0x440139321a15d14ce0729e004e91d66baf1a08b0' &&
        request.params[0].data === '0x4f20b888' // getPoRAddressListLength()
      ) {
        return {
          jsonrpc: '2.0',
          id: request.id,
          result: '0x0000000000000000000000000000000000000000000000000000000000000016',
        }
      } else if (
        request.method === 'eth_call' &&
        request.params[0].to === '0xdd50c053c096cb04a3e3362e2b622529ec5f2e8a' &&
        request.params[0].data === '0xc5f24068' // getWithdrawalQueueLength()
      ) {
        return {
          jsonrpc: '2.0',
          id: request.id,
          result: '0x0000000000000000000000000000000000000000000000000000000000000006',
        }
      } else if (
        request.method === 'eth_call' &&
        request.params[0].to === '0x440139321a15d14ce0729e004e91d66baf1a08b0' &&
        request.params[0].data ===
          '0xf3d4902a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016' // getPoRAddressList()
      ) {
        return {
          jsonrpc: '2.0',
          id: request.id,
          result:
            '',
        }
      } else {
        // Default response for unsupported calls
        return {
          jsonrpc: '2.0',
          id: request.id,
          error: { code: -32601, message: 'Method not found' },
        }
      }
    })

export const mockVirtuneResponseSuccess = (): nock.Scope =>
  nock('http://virtune', {
    encodedQueryParams: true,
  })
    .get('/VIRBTC?key=virtuneApiKey')
    .reply(
      200,
      () => ({
        accountName: 'Virtune Bitcoin ETP',
        result: [
          {
            symbol: 'BTC',
            totalBalance: '123.45678990',
            totalBalanceUsd: '14567890.12',
            wallets: [
              {
                address: '1JSYkxvBJy4wXDskdXfadfTj6Hg9n5r3br',
                symbol: 'BTC',
                custody: 'coinbase',
                name: 'Collateral',
                isStakingWallet: false,
              },
              {
                address: '17ABiL5ToFwYdjGtVngEXo2Bw4EKN5myTT',
                symbol: 'BTC',
                custody: 'coinbase',
                name: 'Trading',
                isStakingWallet: false,
              },
            ],
          },
        ],
        count: 2,
        lastUpdatedAt: '2025-09-03T07:01:44.562+00:00',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()
