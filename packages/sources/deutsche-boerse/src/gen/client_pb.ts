// Date:    07.10.2023
// Version: 001.000.006

// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file client.proto (package Client, syntax proto3)
/* eslint-disable */

import type { Message } from '@bufbuild/protobuf'
import type { GenEnum, GenFile, GenMessage } from '@bufbuild/protobuf/codegenv2'
import { enumDesc, fileDesc, messageDesc } from '@bufbuild/protobuf/codegenv2'
import type { Any } from '@bufbuild/protobuf/wkt'
import { file_google_protobuf_any } from '@bufbuild/protobuf/wkt'

/**
 * Describes the file client.proto.
 */
export const file_client: GenFile =
  /*@__PURE__*/
  fileDesc(
    'CgxjbGllbnQucHJvdG8SBkNsaWVudCJ0CglTdWJzY3JpYmUSKAoGc3RyZWFtGAEgAygLMhguQ2xpZW50LlN1YnNjcmliZS5TdHJlYW0aPQoGU3RyZWFtEg4KBnN0cmVhbRgBIAEoCRIRCglzdGFydFRpbWUYAiABKAMSEAoIc3RhcnRTZXEYAyABKAQiHQoLVW5zdWJzY3JpYmUSDgoGc3RyZWFtGAEgAygJInsKB1JlcXVlc3QSDQoFZXZlbnQYASABKAkSEQoJcmVxdWVzdElkGAIgASgDEiQKCXN1YnNjcmliZRgDIAEoCzIRLkNsaWVudC5TdWJzY3JpYmUSKAoLdW5zdWJzY3JpYmUYBCABKAsyEy5DbGllbnQuVW5zdWJzY3JpYmUiPQoIUmVzcG9uc2USEQoJcmVxdWVzdElkGAEgASgDEh4KBnN0YXR1cxgCIAEoDjIOLkNsaWVudC5TdGF0dXMiUgoNU3RyZWFtTWVzc2FnZRIMCgRzdWJzGAEgASgJEgsKA3NlcRgCIAEoBBImCghtZXNzYWdlcxgDIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkqRwoGU3RhdHVzEgYKAk9LEAASEAoMU0VSVkVSX0VSUk9SEAESEQoNQUNDRVNTX0RFTklFRBACEhAKDE5PVF9FTlRJVExFRBADYgZwcm90bzM',
    [file_google_protobuf_any],
  )

/**
 * @generated from message Client.Subscribe
 */
export type Subscribe = Message<'Client.Subscribe'> & {
  /**
   * @generated from field: repeated Client.Subscribe.Stream stream = 1;
   */
  stream: Subscribe_Stream[]
}

/**
 * Describes the message Client.Subscribe.
 * Use `create(SubscribeSchema)` to create a new message.
 */
export const SubscribeSchema: GenMessage<Subscribe> = /*@__PURE__*/ messageDesc(file_client, 0)

/**
 * @generated from message Client.Subscribe.Stream
 */
export type Subscribe_Stream = Message<'Client.Subscribe.Stream'> & {
  /**
   * @generated from field: string stream = 1;
   */
  stream: string

  /**
   * mutually exclusive to startSeq
   *
   * @generated from field: int64 startTime = 2;
   */
  startTime: bigint

  /**
   * mutually exclusive to startTime
   *
   * @generated from field: uint64 startSeq = 3;
   */
  startSeq: bigint
}

/**
 * Describes the message Client.Subscribe.Stream.
 * Use `create(Subscribe_StreamSchema)` to create a new message.
 */
export const Subscribe_StreamSchema: GenMessage<Subscribe_Stream> =
  /*@__PURE__*/
  messageDesc(file_client, 0, 0)

/**
 * @generated from message Client.Unsubscribe
 */
export type Unsubscribe = Message<'Client.Unsubscribe'> & {
  /**
   * @generated from field: repeated string stream = 1;
   */
  stream: string[]
}

/**
 * Describes the message Client.Unsubscribe.
 * Use `create(UnsubscribeSchema)` to create a new message.
 */
export const UnsubscribeSchema: GenMessage<Unsubscribe> = /*@__PURE__*/ messageDesc(file_client, 1)

/**
 * @generated from message Client.Request
 */
export type Request = Message<'Client.Request'> & {
  /**
   * @generated from field: string event = 1;
   */
  event: string

  /**
   * @generated from field: int64 requestId = 2;
   */
  requestId: bigint

  /**
   * oneof data {
   *
   * @generated from field: Client.Subscribe subscribe = 3;
   */
  subscribe?: Subscribe

  /**
   * }
   *
   * @generated from field: Client.Unsubscribe unsubscribe = 4;
   */
  unsubscribe?: Unsubscribe
}

/**
 * Describes the message Client.Request.
 * Use `create(RequestSchema)` to create a new message.
 */
export const RequestSchema: GenMessage<Request> = /*@__PURE__*/ messageDesc(file_client, 2)

/**
 * one Response for each stream in Request
 *
 * @generated from message Client.Response
 */
export type Response = Message<'Client.Response'> & {
  /**
   * @generated from field: int64 requestId = 1;
   */
  requestId: bigint

  /**
   * @generated from field: Client.Status status = 2;
   */
  status: Status
}

/**
 * Describes the message Client.Response.
 * Use `create(ResponseSchema)` to create a new message.
 */
export const ResponseSchema: GenMessage<Response> = /*@__PURE__*/ messageDesc(file_client, 3)

/**
 * @generated from message Client.StreamMessage
 */
export type StreamMessage = Message<'Client.StreamMessage'> & {
  /**
   * protocol
   *
   * stream / topic subscription
   *
   * @generated from field: string subs = 1;
   */
  subs: string

  /**
   * message sequence number
   *
   * @generated from field: uint64 seq = 2;
   */
  seq: bigint

  /**
   * payload
   *
   * @generated from field: repeated google.protobuf.Any messages = 3;
   */
  messages: Any[]
}

/**
 * Describes the message Client.StreamMessage.
 * Use `create(StreamMessageSchema)` to create a new message.
 */
export const StreamMessageSchema: GenMessage<StreamMessage> =
  /*@__PURE__*/
  messageDesc(file_client, 4)

/**
 * @generated from enum Client.Status
 */
export enum Status {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: SERVER_ERROR = 1;
   */
  SERVER_ERROR = 1,

  /**
   * @generated from enum value: ACCESS_DENIED = 2;
   */
  ACCESS_DENIED = 2,

  /**
   * @generated from enum value: NOT_ENTITLED = 3;
   */
  NOT_ENTITLED = 3,
}

/**
 * Describes the enum Client.Status.
 */
export const StatusSchema: GenEnum<Status> = /*@__PURE__*/ enumDesc(file_client, 0)
