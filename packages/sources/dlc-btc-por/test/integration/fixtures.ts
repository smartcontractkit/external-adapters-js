import nock from 'nock'

export const mockContractCallResponseSuccess = (): nock.Scope =>
  nock('http://localhost:8545', {
    encodedQueryParams: true,
  })
    .persist()
    .post('/', { method: 'eth_chainId', params: [], id: /^\d+$/, jsonrpc: '2.0' })
    .reply(200, (_, request) => ({ jsonrpc: '2.0', id: request['id'], result: '0xaa36a7' }), [
      'Content-Type',
      'application/json',
      'Connection',
      'close',
      'Vary',
      'Accept-Encoding',
      'Vary',
      'Origin',
    ])
    .persist()
    // Get vault data
    .post('/', {
      method: 'eth_call',
      params: [
        {
          to: '0x415131d3e412bd82208ea56856c3e529d1477dd2',
          data: '0xffc42e3900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002710',
        },
        'latest',
      ],
      id: /^\d+$/,
      jsonrpc: '2.0',
    })
    .reply(
      200,
      (_, request) => ({
        jsonrpc: '2.0',
        id: request['id'],
        result:
          '0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000620e1157dc757ffe0f5d5ee79d76f1cb2f5bf16afb87365d46407443bd6fef714f00000000000000000000000002940fcbb3c32901df405da0e96fd97d1e2a53f34000000000000000000000000000000000000000000000000000000006621f49100000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000dd4f29e21f10cb2e485cf9bdab9f2dd1f240bfa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001edcdb31724f5c4ac982e80bef3d4b995f54265b64a53beee2cfaf2b1c067a391a0000000000000000000000002940fcbb3c32901df405da0e96fd97d1e2a53f34000000000000000000000000000000000000000000000000000000006621f5b700000000000000000000000000000000000000000000000000000000001e84800000000000000000000000000dd4f29e21f10cb2e485cf9bdab9f2dd1f240bfa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001ea000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()
    // Get block height
    .post('/', {
      method: 'eth_call',
      params: [
        {
          to: '0x415131d3e412bd82208ea56856c3e529d1477dd2',
          data: '0xf9dcaf32',
        },
        'latest',
      ],
      id: /^\d+$/,
      jsonrpc: '2.0',
    })
    .reply(
      200,
      (_, request) => ({
        jsonrpc: '2.0',
        id: request['id'],
        result:
          '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004030363838333934356639383266386237663066343866643536313763626434363265333463656135376161366364646539393638653535306334386136343361',
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()

export const mockBitcoinRPCResponseSuccess = (): nock.Scope =>
  nock('http://localhost:8554', {
    encodedQueryParams: true,
  })
    .persist()
    .post('/', {
      method: 'getrawtransaction',
      params: ['f855e8b69004946a2c4666b4b1a06415341f5fb5866ba4023d19aa15e3c85d40', true, null],
      jsonrpc: '2.0',
    })
    .reply(
      200,
      (_, request) => ({
        result: {
          txid: 'f855e8b69004946a2c4666b4b1a06415341f5fb5866ba4023d19aa15e3c85d40',
          hash: 'e31041ae2a52c3028b1e2c7ba3a04c4d3b0e4ca5c5e76ddc05c113b87dfb11d9',
          version: 2,
          size: 266,
          vsize: 184,
          weight: 734,
          locktime: 0,
          vin: [
            {
              txid: 'bf084441fd72fcb0629cf4f2361b5b44b6b96f7795966d46d5d4eecaff5ced3f',
              vout: 2,
              scriptSig: {
                asm: '',
                hex: '',
              },
              txinwitness: [
                '3045022100d8e4adc3be5de0f614d2365871505f9cfa70a17f0c1491ec017e1fe862b62c450220240398767f9f8cac720ab7c862f17be8ebf02a3d4cd5349eff848b2b18f9e3e101',
                '021b34f36d8487ce3a7a6f0124f58854d561cb52077593d1e86973fac0fea1a8b1',
              ],
              sequence: 4294967295,
            },
          ],
          vout: [
            {
              value: 0.01,
              n: 0,
              scriptPubKey: {
                asm: '1 c55e7e800ea356bb00d6598a310f029211e691e778417c36f6e5a67336c9f747',
                desc: 'rawtr(c55e7e800ea356bb00d6598a310f029211e691e778417c36f6e5a67336c9f747)#jl4gt0fd',
                hex: '5120c55e7e800ea356bb00d6598a310f029211e691e778417c36f6e5a67336c9f747',
                address: 'bc1pc408aqqw5dttkqxktx9rzrczjgg7dy080pqhcdhkukn8xdkf7arsmftd4l',
                type: 'witness_v1_taproot',
              },
            },
            {
              value: 0.0001,
              n: 1,
              scriptPubKey: {
                asm: '0 2d2d0c13815a141129c9df2ab9b68344398de74b',
                desc: 'addr(bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g)#dyf9q8ne',
                hex: '00142d2d0c13815a141129c9df2ab9b68344398de74b',
                address: 'bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g',
                type: 'witness_v0_keyhash',
              },
            },
            {
              value: 0.02968776,
              n: 2,
              scriptPubKey: {
                asm: '0 2d2d0c13815a141129c9df2ab9b68344398de74b',
                desc: 'addr(bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g)#dyf9q8ne',
                hex: '00142d2d0c13815a141129c9df2ab9b68344398de74b',
                address: 'bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g',
                type: 'witness_v0_keyhash',
              },
            },
          ],
          hex: '020000000001013fed5cffcaeed4d5466d9695776fb9b6445b1b36f2f49c62b0fc72fd414408bf0200000000ffffffff0340420f0000000000225120c55e7e800ea356bb00d6598a310f029211e691e778417c36f6e5a67336c9f74710270000000000001600142d2d0c13815a141129c9df2ab9b68344398de74bc84c2d00000000001600142d2d0c13815a141129c9df2ab9b68344398de74b02483045022100d8e4adc3be5de0f614d2365871505f9cfa70a17f0c1491ec017e1fe862b62c450220240398767f9f8cac720ab7c862f17be8ebf02a3d4cd5349eff848b2b18f9e3e10121021b34f36d8487ce3a7a6f0124f58854d561cb52077593d1e86973fac0fea1a8b100000000',
          blockhash: '00000000000000000001ed0ae84ff1590e267116dabb12ba7b50eab965c5c688',
          confirmations: 63,
          time: 1713502333,
          blocktime: 1713502333,
        },
        error: null,
        id: null,
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
    .persist()
    .post('/', {
      method: 'getrawtransaction',
      params: ['a9afee846bc3771a0fc17b2dbf4f3ab7533df78ac0d7cc2ba85b0862443883a6', true, null],
      jsonrpc: '2.0',
    })
    .reply(
      200,
      (_, request) => ({
        result: {
          txid: 'a9afee846bc3771a0fc17b2dbf4f3ab7533df78ac0d7cc2ba85b0862443883a6',
          hash: 'fff8b162bb7919bb7a7402b6f22add63a5e10ef8118773013ff77139461ffd6f',
          version: 2,
          size: 266,
          vsize: 184,
          weight: 734,
          locktime: 0,
          vin: [
            {
              txid: 'f855e8b69004946a2c4666b4b1a06415341f5fb5866ba4023d19aa15e3c85d40',
              vout: 2,
              scriptSig: {
                asm: '',
                hex: '',
              },
              txinwitness: [
                '3045022100b3429ec3e1656b72745c84a9fc968f159164fc06915b6640e0b3ca32fbe4779a022071198018d8f09883edb5ee90cccf397b8fb2f56886bbf1957afb023d8b4940a501',
                '021b34f36d8487ce3a7a6f0124f58854d561cb52077593d1e86973fac0fea1a8b1',
              ],
              sequence: 4294967295,
            },
          ],
          vout: [
            {
              value: 0.02,
              n: 0,
              scriptPubKey: {
                asm: '1 8d740421efcbb38fc6778b97f63924ff189dd26f43a6b7c19c21f5b1869bd8c3',
                desc: 'rawtr(8d740421efcbb38fc6778b97f63924ff189dd26f43a6b7c19c21f5b1869bd8c3)#tn0kh3md',
                hex: '51208d740421efcbb38fc6778b97f63924ff189dd26f43a6b7c19c21f5b1869bd8c3',
                address: 'bc1p346qgg00ewecl3nh3wtlvwfyluvfm5n0gwnt0svuy86mrp5mmrpsd3zueu',
                type: 'witness_v1_taproot',
              },
            },
            {
              value: 0.0002,
              n: 1,
              scriptPubKey: {
                asm: '0 2d2d0c13815a141129c9df2ab9b68344398de74b',
                desc: 'addr(bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g)#dyf9q8ne',
                hex: '00142d2d0c13815a141129c9df2ab9b68344398de74b',
                address: 'bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g',
                type: 'witness_v0_keyhash',
              },
            },
            {
              value: 0.00941968,
              n: 2,
              scriptPubKey: {
                asm: '0 2d2d0c13815a141129c9df2ab9b68344398de74b',
                desc: 'addr(bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g)#dyf9q8ne',
                hex: '00142d2d0c13815a141129c9df2ab9b68344398de74b',
                address: 'bc1q95kscyuptg2pz2wfmu4tnd5rgsucme6tpx900g',
                type: 'witness_v0_keyhash',
              },
            },
          ],
          hex: '02000000000101405dc8e315aa193d02a46b86b55f1f341564a0b1b466462c6a940490b6e855f80200000000ffffffff0380841e00000000002251208d740421efcbb38fc6778b97f63924ff189dd26f43a6b7c19c21f5b1869bd8c3204e0000000000001600142d2d0c13815a141129c9df2ab9b68344398de74b905f0e00000000001600142d2d0c13815a141129c9df2ab9b68344398de74b02483045022100b3429ec3e1656b72745c84a9fc968f159164fc06915b6640e0b3ca32fbe4779a022071198018d8f09883edb5ee90cccf397b8fb2f56886bbf1957afb023d8b4940a50121021b34f36d8487ce3a7a6f0124f58854d561cb52077593d1e86973fac0fea1a8b100000000',
          blockhash: '00000000000000000001ed0ae84ff1590e267116dabb12ba7b50eab965c5c688',
          confirmations: 64,
          time: 1713502333,
          blocktime: 1713502333,
        },
        error: null,
        id: null,
      }),
      [
        'Content-Type',
        'application/json',
        'Connection',
        'close',
        'Vary',
        'Accept-Encoding',
        'Vary',
        'Origin',
      ],
    )
