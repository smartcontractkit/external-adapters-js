import { ethers } from 'ethers'

export const StaderPoolFactoryContract_ABI: ethers.ContractInterface = [
  { inputs: [], name: 'ZeroAddress', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'string', name: 'poolName', type: 'string' },
      { indexed: false, internalType: 'address', name: 'poolAddress', type: 'address' },
    ],
    name: 'PoolAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint8', name: 'poolId', type: 'uint8' },
      { indexed: false, internalType: 'address', name: 'poolAddress', type: 'address' },
    ],
    name: 'PoolAddressUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'previousAdminRole', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'newAdminRole', type: 'bytes32' },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: '_poolName', type: 'string' },
      { internalType: 'address', name: '_poolAddress', type: 'address' },
    ],
    name: 'addNewPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getActiveValidatorCountByPool',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'pageNumber', type: 'uint256' },
      { internalType: 'uint256', name: 'pageSize', type: 'uint256' },
    ],
    name: 'getAllActiveValidators',
    outputs: [
      {
        components: [
          { internalType: 'enum ValidatorStatus', name: 'status', type: 'uint8' },
          { internalType: 'bytes', name: 'pubkey', type: 'bytes' },
          { internalType: 'bytes', name: 'preDepositSignature', type: 'bytes' },
          { internalType: 'bytes', name: 'depositSignature', type: 'bytes' },
          { internalType: 'address', name: 'withdrawVaultAddress', type: 'address' },
          { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
          { internalType: 'uint256', name: 'initialBondEth', type: 'uint256' },
          { internalType: 'uint256', name: 'depositTime', type: 'uint256' },
          { internalType: 'uint256', name: 'withdrawnTime', type: 'uint256' },
        ],
        internalType: 'struct Validator[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getCollateralETH',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: '_poolId', type: 'uint8' },
      { internalType: 'bytes', name: '_pubkey', type: 'bytes' },
    ],
    name: 'getOperator',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'active', type: 'bool' },
          { internalType: 'bool', name: 'optedForSocializingPool', type: 'bool' },
          { internalType: 'string', name: 'operatorName', type: 'string' },
          { internalType: 'address payable', name: 'operatorRewardAddress', type: 'address' },
          { internalType: 'address', name: 'operatorAddress', type: 'address' },
        ],
        internalType: 'struct Operator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getOperatorFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: '_poolId', type: 'uint8' },
      { internalType: 'address', name: '_nodeOperator', type: 'address' },
      { internalType: 'uint256', name: '_startIndex', type: 'uint256' },
      { internalType: 'uint256', name: '_endIndex', type: 'uint256' },
    ],
    name: 'getOperatorTotalNonTerminalKeys',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getProtocolFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getQueuedValidatorCountByPool',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '_poolId', type: 'uint8' }],
    name: 'getSocializingPoolAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalActiveValidatorCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: '_poolId', type: 'uint8' },
      { internalType: 'bytes', name: '_pubkey', type: 'bytes' },
    ],
    name: 'getValidatorByPool',
    outputs: [
      {
        components: [
          { internalType: 'enum ValidatorStatus', name: 'status', type: 'uint8' },
          { internalType: 'bytes', name: 'pubkey', type: 'bytes' },
          { internalType: 'bytes', name: 'preDepositSignature', type: 'bytes' },
          { internalType: 'bytes', name: 'depositSignature', type: 'bytes' },
          { internalType: 'address', name: 'withdrawVaultAddress', type: 'address' },
          { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
          { internalType: 'uint256', name: 'initialBondEth', type: 'uint256' },
          { internalType: 'uint256', name: 'depositTime', type: 'uint256' },
          { internalType: 'uint256', name: 'withdrawnTime', type: 'uint256' },
        ],
        internalType: 'struct Validator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_admin', type: 'address' }],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'isExistingPubkey',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolCount',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    name: 'pools',
    outputs: [
      { internalType: 'string', name: 'poolName', type: 'string' },
      { internalType: 'address', name: 'poolAddress', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'retrieveOperator',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'active', type: 'bool' },
          { internalType: 'bool', name: 'optedForSocializingPool', type: 'bool' },
          { internalType: 'string', name: 'operatorName', type: 'string' },
          { internalType: 'address payable', name: 'operatorRewardAddress', type: 'address' },
          { internalType: 'address', name: 'operatorAddress', type: 'address' },
        ],
        internalType: 'struct Operator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'retrieveValidator',
    outputs: [
      {
        components: [
          { internalType: 'enum ValidatorStatus', name: 'status', type: 'uint8' },
          { internalType: 'bytes', name: 'pubkey', type: 'bytes' },
          { internalType: 'bytes', name: 'preDepositSignature', type: 'bytes' },
          { internalType: 'bytes', name: 'depositSignature', type: 'bytes' },
          { internalType: 'address', name: 'withdrawVaultAddress', type: 'address' },
          { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
          { internalType: 'uint256', name: 'initialBondEth', type: 'uint256' },
          { internalType: 'uint256', name: 'depositTime', type: 'uint256' },
          { internalType: 'uint256', name: 'withdrawnTime', type: 'uint256' },
        ],
        internalType: 'struct Validator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: '_poolId', type: 'uint8' },
      { internalType: 'address', name: '_newPoolAddress', type: 'address' },
    ],
    name: 'updatePoolAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export const StaderVaultContract_ABI: ethers.ContractInterface = [
  { inputs: [], name: 'ZeroAddress', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'nodeDistributor', type: 'address' }],
    name: 'NodeELRewardVaultCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'previousAdminRole', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'newAdminRole', type: 'bytes32' },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'withdrawVault', type: 'address' }],
    name: 'WithdrawVaultCreated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STADER_NETWORK_CONTRACT',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'poolId', type: 'uint8' },
      { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
    ],
    name: 'computeNodeELRewardVaultAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'poolId', type: 'uint8' },
      { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
      { internalType: 'uint256', name: 'validatorCount', type: 'uint256' },
    ],
    name: 'computeWithdrawVaultAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'poolId', type: 'uint8' },
      { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
      { internalType: 'address payable', name: 'nodeRecipient', type: 'address' },
    ],
    name: 'deployNodeELRewardVault',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'poolId', type: 'uint8' },
      { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
      { internalType: 'uint256', name: 'validatorCount', type: 'uint256' },
      { internalType: 'address payable', name: 'nodeRecipient', type: 'address' },
    ],
    name: 'deployWithdrawVault',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_withdrawVault', type: 'address' }],
    name: 'getValidatorWithdrawCredential',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_staderConfig', type: 'address' }],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nodeELRewardVaultImplementation',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'staderConfig',
    outputs: [{ internalType: 'contract IStaderConfig', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_staderConfig', type: 'address' }],
    name: 'updateStaderConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'validatorWithdrawalVaultImplementation',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
]

export const StaderPoolAddressContract_ABI = [
  { inputs: [], name: 'OperatorFeeMoreThanTOTAL_FEE', type: 'error' },
  { inputs: [], name: 'OperatorFeeUnchanged', type: 'error' },
  { inputs: [], name: 'ProtocolFeeMoreThanTOTAL_FEE', type: 'error' },
  { inputs: [], name: 'ProtocolFeeUnchanged', type: 'error' },
  { inputs: [], name: 'UnsupportedOperation', type: 'error' },
  { inputs: [], name: 'ZeroAddress', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: '_operatorFee', type: 'uint256' }],
    name: 'OperatorFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: '_protocolFee', type: 'uint256' }],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: '_amount', type: 'uint256' }],
    name: 'ReceivedCollateralETH',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'previousAdminRole', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'newAdminRole', type: 'bytes32' },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: '_validatorId', type: 'uint256' },
      { indexed: false, internalType: 'bytes', name: '_pubKey', type: 'bytes' },
    ],
    name: 'ValidatorDepositedOnBeaconChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'bytes', name: '_pubKey', type: 'bytes' }],
    name: 'ValidatorPreDepositedOnBeaconChain',
    type: 'event',
  },
  { stateMutability: 'payable', type: 'fallback' },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DEPOSIT_NODE_BOND',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FULL_DEPOSIT_SIZE',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PERMISSIONLESS_NODE_REGISTRY',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PERMISSIONLESS_POOL_ADMIN',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'POOL_MANAGER',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PRE_DEPOSIT_SIZE',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TOTAL_FEE',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes', name: '_pubkey', type: 'bytes' },
      { internalType: 'bytes', name: '_signature', type: 'bytes' },
      { internalType: 'bytes', name: '_withdrawCredential', type: 'bytes' },
      { internalType: 'uint256', name: '_depositAmount', type: 'uint256' },
    ],
    name: 'computeDepositDataRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllActiveValidators',
    outputs: [
      {
        components: [
          { internalType: 'enum ValidatorStatus', name: 'status', type: 'uint8' },
          { internalType: 'bytes', name: 'pubkey', type: 'bytes' },
          { internalType: 'bytes', name: 'preDepositSignature', type: 'bytes' },
          { internalType: 'bytes', name: 'depositSignature', type: 'bytes' },
          { internalType: 'address', name: 'withdrawVaultAddress', type: 'address' },
          { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
          { internalType: 'uint256', name: 'initialBondEth', type: 'uint256' },
          { internalType: 'uint256', name: 'depositTime', type: 'uint256' },
          { internalType: 'uint256', name: 'withdrawnTime', type: 'uint256' },
        ],
        internalType: 'struct Validator[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCollateralETH',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'getOperator',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'active', type: 'bool' },
          { internalType: 'bool', name: 'optedForSocializingPool', type: 'bool' },
          { internalType: 'string', name: 'operatorName', type: 'string' },
          { internalType: 'address payable', name: 'operatorRewardAddress', type: 'address' },
          { internalType: 'address', name: 'operatorAddress', type: 'address' },
        ],
        internalType: 'struct Operator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_nodeOperator', type: 'address' },
      { internalType: 'uint256', name: '_startIndex', type: 'uint256' },
      { internalType: 'uint256', name: '_endIndex', type: 'uint256' },
    ],
    name: 'getOperatorTotalNonTerminalKeys',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSocializingPoolAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalActiveValidatorCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalQueuedValidatorCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'getValidator',
    outputs: [
      {
        components: [
          { internalType: 'enum ValidatorStatus', name: 'status', type: 'uint8' },
          { internalType: 'bytes', name: 'pubkey', type: 'bytes' },
          { internalType: 'bytes', name: 'preDepositSignature', type: 'bytes' },
          { internalType: 'bytes', name: 'depositSignature', type: 'bytes' },
          { internalType: 'address', name: 'withdrawVaultAddress', type: 'address' },
          { internalType: 'uint256', name: 'operatorId', type: 'uint256' },
          { internalType: 'uint256', name: 'initialBondEth', type: 'uint256' },
          { internalType: 'uint256', name: 'depositTime', type: 'uint256' },
          { internalType: 'uint256', name: 'withdrawnTime', type: 'uint256' },
        ],
        internalType: 'struct Validator',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_staderConfig', type: 'address' }],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: '_pubkey', type: 'bytes' }],
    name: 'isExistingPubkey',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operatorFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolId',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes[]', name: '_pubkey', type: 'bytes[]' },
      { internalType: 'bytes[]', name: '_preDepositSignature', type: 'bytes[]' },
      { internalType: 'uint256', name: '_operatorId', type: 'uint256' },
      { internalType: 'uint256', name: '_operatorTotalKeys', type: 'uint256' },
    ],
    name: 'preDepositOnBeaconChain',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'receiveRemainingCollateralETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_operatorFee', type: 'uint256' }],
    name: 'setOperatorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_protocolFee', type: 'uint256' }],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'staderConfig',
    outputs: [{ internalType: 'contract IStaderConfig', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakeUserETHToBeaconChain',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_staderConfig', type: 'address' }],
    name: 'updateStaderConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]
