name: Setup
description: Runs basic commands to bootstrap yarn and install dependencies
inputs:
  check-cache:
    description: Passes the --check-cache flag to yarn install for verification jobs
    required: false
    default: 'false'
  skip-setup:
    description: Skips the "yarn setup" step when not required
    required: false
    default: 'false'
  skip-cache:
    description: Skips cache restores and saves if set to true
    required: false
    default: 'false'
  upstream-branch:
    description: The ref to compare to when calculating which packages to build
    required: false

runs:
  using: 'composite'
  steps:
    # This is a useful step that will help other actions later on
    - name: Configure git
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    # First, we want to install yarn since our base image doesn't have it installed
    - uses: actions/setup-node@v3
      with:
        # This doesn't use cache: 'yarn' as the base image doesn't have it, and we're caching node_modules
        node-version: 16
    - name: Install yarn
      run: npm i -g yarn
      shell: bash

    # Next, we want to get the dependencies, either from the cache, or fresh
    # You'll see some internet comments saying it's bad practice to cache node_modules,
    # but it should be fine in this case since we're actually looking for identical envs
    - name: Restore yarn cache
      id: restore-yarn-cache
      if: inputs.skip-cache != 'true'
      uses: actions/cache/restore@v3
      with:
        # Restrict it to the run and attempt for debugging purposes, but in theory
        # these should be fine to persist between runs as well
        key: yarn_cache-${{ hashFiles('./yarn.lock') }}-${{ github.run_id }}-${{ github.run_attempt }}
        path: |
          ./.yarn/unplugged/**
          ./.yarn/install-state/**
    # If there was no cached yarn packages, install them from scratch
    - name: yarn install
      if: steps.restore-yarn-cache.outputs.cache-hit != 'true'
      run: |
        if [ "${{ inputs.check-cache }}" = "true" ]; then
          yarn install --immutable --check-cache
        else 
          yarn install --immutable
        fi
      shell: bash
    - name: Cache yarn cache
      if: steps.restore-yarn-cache.outputs.cache-hit != 'true' && inputs.skip-cache != 'true'
      uses: actions/cache/save@v3
      with:
        key: yarn_cache-${{ hashFiles('./yarn.lock') }}-${{ github.run_id }}-${{ github.run_attempt }}
        path: |
          ./.yarn/unplugged/**
          ./.yarn/install-state/**

    # Build TS files unless it's been specified otherwise
    - name: Restore TS built files if present
      id: restore-ts-build
      uses: actions/cache/restore@v3
      if: inputs.skip-setup != 'true' && inputs.skip-cache != 'true' # Not all jobs, like building gha matrices, require setup
      with:
        key: tsbuild-${{ github.sha }}
        path: |
          ./packages/**/tsconfig.tsbuildinfo
          ./packages/**/dist/
    - name: Fetch base branch for comparison in later steps
      shell: bash
      run: |
        git fetch origin ${{ github.base_ref }}:${{ github.base_ref }} --depth 1
    - name: Build files
      if: inputs.skip-setup != 'true' && steps.restore-ts-build.outputs.cache-hit != 'true'
      env:
        UPSTREAM_BRANCH: ${{ github.base_ref }}
      run: |
        yarn workspaces list --json -R --since=$UPSTREAM_BRANCH \
        | jq -csr '.' \
        | jq '{ files: [], include: [], references: [{ path:  .[] | .location | select(startswith("packages/sources") or startswith("packages/composites") or startswith("packages/targets")) | match("packages/(.*)").captures[0].string }] }' \
        > packages/tsconfig.tmp.json && yarn tsc -b packages/tsconfig.tmp.json
      shell: bash
    - name: Cache built files
      if: inputs.skip-setup != 'true' && steps.restore-ts-build.outputs.cache-hit != 'true' && inputs.skip-cache != 'true'
      uses: actions/cache/save@v3
      with:
        key: tsbuild-${{ github.sha }}
        path: |
          ./packages/**/tsconfig.tsbuildinfo
          ./packages/**/dist/
