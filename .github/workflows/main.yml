name: Test & build

on:
  push:
    branches:
      - master
      - develop
  pull_request: ~
  workflow_dispatch:
    inputs:
      BUILD_ALL:
        description: whether certain steps should be run against all adapters
        required: false
        default: 'false'

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # We will make all other jobs depend on this one, since this will cache yarn dependencies and TS builds
  packages:
    name: Verify dependency package archives
    runs-on: [self-hosted, sdlc-ghr-prod]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup

  run-integration-tests:
    needs: packages
    name: Run integration tests
    runs-on: [self-hosted, sdlc-ghr-prod]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: timeout 300 yarn test:ci:integration

  run-unit-tests:
    needs: packages
    name: Run unit tests
    runs-on: [self-hosted, sdlc-ghr-prod]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Run unit tests
        run: yarn test:ci:unit --coverage

      - name: Upload unit-test coverage report
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: unit-tests-coverage
          path: ./coverage/lcov.info

  run-basic-checks:
    needs: packages
    name: Run linters
    runs-on: [self-hosted, sdlc-ghr-prod]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn setup-tests
      - run: yarn format:check
      - run: yarn lint -f json -o eslint-report.json

      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: eslint-report
          path: ./eslint-report.json

  run-documentation-check:
    needs: packages
    name: Documentation generation test
    runs-on: [self-hosted, sdlc-ghr-prod]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: Test Master List Generation
        run: yarn generate:master-list -v
      - name: Test README Generation
        run: |
          # pass BUILD_ALL to generate:readme to force a full run
          yarn generate:readme -v
        env:
          UPSTREAM_BRANCH: origin/${{ github.base_ref }}
          BUILD_ALL: ${{ github.event.inputs.BUILD_ALL }}
    env:
      METRICS_ENABLED: false

  # Read build strategy matrix of adapters, from a json file
  matrix-adapters:
    needs: packages
    runs-on: [self-hosted, sdlc-ghr-prod]
    outputs:
      matrix: ${{ steps.create-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: Generate job matrix
        id: create-matrix
        run: yarn generate:gha:matrix
    env:
      UPSTREAM_BRANCH: origin/${{ github.base_ref }}
      BUILD_ALL: ${{ github.event.inputs.BUILD_ALL }}
  build-adapters:
    needs: [run-basic-checks, matrix-adapters]
    name: (${{ matrix.adapter.type }}) Build ${{matrix.adapter.name}} adapter
    runs-on: [self-hosted, sdlc-ghr-prod]
    strategy:
      matrix: ${{fromJson(needs.matrix-adapters.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Generate docker-compose file
        run: yarn generate:docker-compose
      - run: docker-compose -f docker-compose.generated.yaml build ${{ matrix.adapter.name }}

  sonarqube:
    name: SonarQube Scan
    needs: [run-unit-tests, run-basic-checks]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # fetches all history for all tags and branches to provide more metadata for sonar reports

      - name: Download all reports
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1

      - name: Set SonarQube Reports Paths
        id: sonarqube_report_paths
        shell: bash
        run: |
          echo "sonarqube_coverage_report_paths=$(find -type f -name 'lcov.info' -printf "%p,")" >> $GITHUB_OUTPUT
          echo "sonarqube_eslint_report_paths=$(find -type f -name 'eslint-report.json' -printf "%p")" >> $GITHUB_OUTPUT

      - name: Update ESLint report symlinks
        run: sed -i 's+/home/ec2-user/actions-runner/_work/external-adapters-js/external-adapters-js/+/github/workspace/+g' ${{ steps.sonarqube_report_paths.outputs.sonarqube_eslint_report_paths }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a # v1.2.0
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_coverage_report_paths }}
            -Dsonar.eslint.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_eslint_report_paths }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
