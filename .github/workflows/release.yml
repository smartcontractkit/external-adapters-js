on:
  push:
    branches:
      # On develop, we build and publish containers, with the tag of "develop-latest"

      # Ex. A newly build coingecko adapter is built and pushed to ECR.
      # The ECR registry is reachable at public.ecr.aws/chainlink/adapters/, or at the private registry

      # You would be able to pull the coingecko adapter with the following command:
      # docker pull public.ecr.aws/chainlink/adapters/coingecko-adapter:develop-latest
      - develop

      # On master, we build and publish containers with the tag of "latest" and another tag of the
      # adapters version contained within package.json.

      # Ex. If the value of the field "version" in the "package.json" file of the coingecko adapter is "0.0.5-beta",
      # The "coingecko-adapter" container will be resolvable with the following specifiers:
      # coingecko-adapter:latest
      # coingecko-adapter:0.0.5-beta

      # The ECR registry is reachable at public.ecr.aws/chainlink/adapters/

      # You would be able to pull the coingecko adapter with the following commands:
      # docker pull public.ecr.aws/chainlink/adapters/coingecko-adapter:latest
      # docker pull public.ecr.aws/chainlink/adapters/coingecko-adapter:0.0.5-beta
      - master
  # A workflow dispatch would trigger the same behaviour as a push to the master branch
  workflow_dispatch:

name: Release

env:
  publicecr-name: chainlink

jobs:
  matrix-adapters:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - name: Generate job matrix
        id: create-matrix
        uses: ./.github/actions/release/matrix-adapters

  publish-artifacts:
    needs: [matrix-adapters]
    runs-on: ubuntu-latest
    name: (${{ matrix.adapter.type }}) Publish ${{ matrix.adapter.name }} adapter Docker image
    strategy:
      matrix: ${{fromJson(needs.matrix-adapters.outputs.matrix)}}
      max-parallel: 35
    steps:
      - uses: actions/checkout@v2

      # Handle publishing to our public ECR repo
      - name: Configure AWS Credentials for SDLC Public ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PUBLICECR_ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWS_PUBLICECR_SECRETKEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_PUBLICECR_ROLE_ARN }}
          role-duration-seconds: 1200
      - if: github.ref == 'refs/heads/master'
        name: Publish adapter to public ECR
        uses: ./.github/actions/release/publish-artifacts
        with:
          branch: undefined
          latest: undefined
          image-prefix: public.ecr.aws/${{ env.publicecr-name }}/adapters/
          adapter-name: ${{ matrix.adapter.name }}
          aws-region: us-east-1
          aws-ecr-private: 'false'

      # Handle publishing to our private ECR repo
      - name: Configure AWS Credentials for SDLC Private ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PRIVATEECR_ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATEECR_SECRETKEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Publish adapter to private ECR
        uses: ./.github/actions/release/publish-artifacts
        with:
          branch: ${{ fromJSON('[undefined, "develop"]')[github.ref == 'refs/heads/develop'] }}
          latest: ${{ fromJSON('[undefined, true]')[github.ref == 'refs/heads/develop'] }}

          image-prefix: ${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/adapters/
          adapter-name: ${{ matrix.adapter.name }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-ecr-private: 'true'
          aws-ecr-account-ids: ${{ secrets.AWS_PRIVATE_ECR_SECONDARY_ACCOUNT_ACCESS_IDS }}

      # If we're on master, publish again with a forced 'latest' tag
      - if: github.ref == 'refs/heads/master'
        name: Publish adapter to private ECR, with forced latest tag
        uses: ./.github/actions/release/publish-artifacts
        with:
          latest: true

          image-prefix: ${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/adapters/
          adapter-name: ${{ matrix.adapter.name }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-ecr-private: 'true'
          aws-ecr-account-ids: ${{ secrets.AWS_PRIVATE_ECR_SECONDARY_ACCOUNT_ACCESS_IDS }}
